name: Community Chess

on:
  issues:
    types: [opened]
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  apply-move:
    runs-on: ubuntu-latest
    concurrency:
      group: chess
      cancel-in-progress: false
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-chess

      - name: Extract move from issue title
        id: extract
        shell: bash
        run: |
          title='${{ github.event_name == 'issues' && github.event.issue.title || '' }}'
          echo "Title: $title"
          is_chess=false
          move=""
          reset=false

          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            is_chess=true
            echo "actor=${{ github.actor }}" >> $GITHUB_OUTPUT
          else
            echo "actor=${{ github.event.issue.user.login }}" >> $GITHUB_OUTPUT
            if echo "$title" | grep -qi '^chess|reset$'; then
              is_chess=true
              reset=true
            elif echo "$title" | grep -qi '^chess|move|'; then
              is_chess=true
              move=$(echo "$title" | awk -F'|' '{print $3}')
            fi
          fi

          echo "is_chess=$is_chess" >> $GITHUB_OUTPUT
          echo "move=$move" >> $GITHUB_OUTPUT
          echo "reset=$reset" >> $GITHUB_OUTPUT
          echo "Parsed -> is_chess=$is_chess move=$move reset=$reset"

      - name: Update README with chess board and moves
        if: steps.extract.outputs.is_chess == 'true'
        env:
          CHESS_MOVE: ${{ steps.extract.outputs.move }}
          CHESS_ACTOR: ${{ steps.extract.outputs.actor }}
          CHESS_RESET: ${{ steps.extract.outputs.reset }}
        run: |
          if [ "$CHESS_RESET" = "true" ]; then
            python scripts/chess/update_readme.py --reset --actor "$CHESS_ACTOR"
          else
            python scripts/chess/update_readme.py --move "$CHESS_MOVE" --actor "$CHESS_ACTOR"
          fi

      - name: Commit and push changes
        if: steps.extract.outputs.is_chess == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md chess/state.txt || true
          if [ -f chess/outcome.txt ]; then
            echo "Outcome:" && cat chess/outcome.txt || true
            git add chess/outcome.txt || true
          fi
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            msg="chess: update board"
            if [ -n "${{ steps.extract.outputs.move }}" ]; then
              msg="$msg (move ${{ steps.extract.outputs.move }})"
            fi
            if [ "${{ steps.extract.outputs.reset }}" = "true" ]; then
              msg="$msg (reset)"
            fi
            git commit -m "$msg"
            git push
          fi

      - name: Close issue (if any)
        if: github.event_name == 'issues' && steps.extract.outputs.is_chess == 'true'
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            Thanks @${{ github.event.issue.user.login }}! Processed move `${{ steps.extract.outputs.move }}`. The board has been updated in the README.
